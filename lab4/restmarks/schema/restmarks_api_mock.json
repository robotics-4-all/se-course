{
  "openapi": "3.0.0",
  "info": {
    "title": "SE Course RESTMARKS API",
    "description": "This is a simple API",
    "contact": {
      "email": "klpanagi@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "//virtserver.swaggerhub.com/secoursetest"
    }
  ],
  "tags": [
    {
      "name": "admin",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "user",
      "description": "Simple user accounts"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get user accounts",
        "description": "FR1 - A user must be able to create a user account by providing\na username and a password\n",
        "operationId": "getUsers",
        "responses": {
          "400": {
            "description": "Bad input parameter"
          },
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user account",
        "description": "FR1 - A user must be able to create a user account by providing\na username and a password\n",
        "operationId": "createUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "400": {
            "description": "Bad input parameter"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "FR2 - A user must be able to login to his/her account by providing his/her\nusername and password\n",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/{username}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user information",
        "description": "FR3 - A user that is logged in to his account must be able to update his\npassword\n",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "user that need to be updated",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "400": {
            "description": "Bad input parameter"
          },
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      }
    },
    "/user/{username}/bookmark": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Retrieve all bookmarks",
        "description": "FR5 - A logged in user must be able to retrieve any bookmark from his\naccount\n(FR10)\n",
        "operationId": "getAllBookmarks",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllBookmarks"
                }
              }
            }
          },
          "400": {
            "description": "Bad input parameter"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add Bookmark to user account",
        "description": "FR4 - A logged in user must be able to add a new bookmark to his account\n",
        "operationId": "addBookmark",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "user that need to be updated",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bookmark"
        },
        "responses": {
          "400": {
            "description": "Bad input parameter"
          },
          "default": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      }
    },
    "/user/{username}/bookmark/{bookmark_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Retrieve bookmark",
        "description": "FR5 - A logged in user must be able to retrieve any bookmark from his\naccount\n",
        "operationId": "getBookmark",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookmark_id",
            "in": "path",
            "description": "The ID of the bookmark",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "400": {
            "description": "Bad input parameter"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update bookmark",
        "description": "FR7 - A logged in user must be able to update any bookmark from his\naccount\nFR8 - A logged in user must be able to mark his bookmarks as public or\nprivate\n",
        "operationId": "updateBookmark",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookmark_id",
            "in": "path",
            "description": "The ID of the bookmark",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bookmark"
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "400": {
            "description": "Bad input parameter"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete bookmark from user account",
        "description": "FR6 - A logged in user must be able to delete any bookmark\nfrom his account\n",
        "operationId": "deleteBookmark",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookmark_id",
            "in": "path",
            "description": "The ID of the bookmark",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad input parameter"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      }
    },
    "/user/{username}/bookmark/{bookmark_id}/tag": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add tag to bookmark",
        "description": "FR9 - A logged in user must be able to add tags to his bookmarks\n",
        "operationId": "tagBookmark",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookmark_id",
            "in": "path",
            "description": "The ID of the bookmark",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Bookmark model",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad input parameter"
          }
        },
        "security": [
          {
            "JWTbearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Bookmark": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "AllBookmarks": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Bookmark"
        }
      },
      "ComplexModel": {
        "type": "object",
        "properties": {
          "bookmark": {
            "$ref": "#/components/schemas/Bookmark"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      }
    },
    "requestBodies": {
      "Bookmark": {
        "description": "Bookmark model",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Bookmark"
            }
          }
        },
        "required": true
      },
      "User": {
        "description": "User model",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "JWTbearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
